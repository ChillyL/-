<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chilly.blog.mapper.TypeMapper"><!--java的mapper路径-->
    <!--<resultMap id="唯一的标识"（自己起名字） type="映射的pojo对象"(实体类路径)>-->
    <resultMap id="typeResult" type="com.chilly.blog.entity.Type">
        <!--id column="表的主键字段，或者可以为查询语句中的别名字段"  property="映射pojo对象的主键属性" jdbcType="字段类型"(VARCHAR)) -->
        <id column="type_id" property="id" javaType="Long" jdbcType="BIGINT"/>
        <!--result column="表的一个字段（可以为任意表的一个字段）" jdbcType="字段类型" property="映射到pojo对象的一个属性（须为type定义的pojo对象中的一个属性）"-->
        <result column="type_name" property="name" javaType="String" jdbcType="VARCHAR"/>
    </resultMap>

    <!--<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">-->
    <select id="getType" resultMap="typeResult" parameterType="long">
        select *
        from type
        where type_id =#{id};
    </select>

    <select id="getTypeByName" resultMap="typeResult" parameterType="String">
        select *
        from type
        where type_name =#{name};
    </select>

    <insert id="saveType" parameterType="com.chilly.blog.entity.Type">
        insert into type
        values (#{id},#{name});
    </insert>

    <select id="listType" resultMap="typeResult">
        select *
        from type;
    </select>

    <update id="updateType" parameterType="com.chilly.blog.entity.Type">
        update type set type_name =#{name}
        where type_id =#{id};
    </update>

    <delete id="deleteType" parameterType="long">
        delete from type
        where type_id =#{id};
    </delete>
</mapper>